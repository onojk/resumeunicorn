from flask_wtf import FlaskForm
from wtforms import StringField, TextAreaField, IntegerField
from wtforms.validators import DataRequired, Length, Email, Optional, Regexp, URL, NumberRange, ValidationError
from wtforms.validators import ValidationError import (
    DataRequired, Length, Email, Optional, Regexp, URL, NumberRange
)

NAME_RE = r"^[A-Za-z][A-Za-z\s\.'-]{1,79}$"
ROLE_RE = r"^[A-Za-z0-9\s\-\&\(\)\/\.,]{2,100}$"

# Ensure LinkedIn-only URLs
from urllib.parse import urlparse

def must_be_linkedin(form, field):
    if not field.data:
        return
    u = urlparse(field.data)
    host = (u.hostname or "").lower()
    if not (host.endswith("linkedin.com") or host.endswith("linkedin.cn")):
        raise ValidationError("Must be a linkedin.com URL")


class ResumeRequestForm(FlaskForm):
    name = StringField(
        "Name",
        validators=[DataRequired(), Length(min=2, max=80),
                    Regexp(NAME_RE, message="Use letters, spaces, .'- only")],
    )
    email = StringField(
        "Email",
        validators=[DataRequired(), Email(), Length(max=120)],
    )
    role = StringField(
        "Target Role",
        validators=[DataRequired(), Length(min=2, max=100), Regexp(ROLE_RE)],
    )
    summary = TextAreaField(
        "Professional Summary",
        validators=[Optional(), Length(max=500)],
    )
    linkedin = StringField(
        "LinkedIn URL",
        validators=[Optional(), URL(require_tld=True, message="Use a full https:// URL"), Length(max=200)],
    )
    years = IntegerField(
        "Years of Experience",
        validators=[Optional(), NumberRange(min=0, max=60, message="0â€“60 only")],
    )
    skills = StringField(
        "Top Skills (comma-separated)",
        validators=[Optional(), Length(max=200)],
    )
